# 32-bit shellcode patterns
prolog32_patterns = [
    bytes([0x55, 0x8B, 0xEC]),  # PUSH EBP; MOV EBP, ESP
    bytes([0x55, 0x89, 0xE5]),  # PUSH EBP; MOV EBP, ESP
    bytes([0x60, 0x89, 0xE5])   # PUSHAD; MOV EBP, ESP
]

# 64-bit shellcode patterns
prolog64_patterns = [
    bytes([0x40, 0x53, 0x48, 0x83, 0xEC]),  # PUSH RBX; SUB RSP, <BYTE>
    bytes([0x55, 0x48, 0x8B, 0xEC]),        # PUSH RBP; MOV RBP, RSP
    bytes([0x40, 0x55, 0x48, 0x83, 0xEC]),  # PUSH RBP; SUB RSP, <BYTE>
    bytes([0x53, 0x48, 0x81, 0xEC]),        # PUSH RBX; SUB RSP, <DWORD>
    bytes([0x48, 0x83, 0xE4, 0xF0]),        # AND RSP, FFFFFFFFFFFFFFF0
    bytes([0x57, 0x48, 0x89, 0xE7]),        # PUSH RDI; MOV RDI, RSP
    bytes([0x48, 0x8B, 0xC4, 0x48, 0x89, 0x58, 0x08, 0x4C, 0x89, 0x48, 0x20, 0x4C, 0x89, 0x40, 0x18, 0x48, 0x89, 0x50, 0x10, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57])  # Complex prolog
]