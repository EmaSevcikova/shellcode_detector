name = "system reboot and shutdown pattern"
# Behavior patterns organized by architecture and category
behavior_patterns = {
    "32bit": {
        "syscall": [
            bytes([0xcd, 0x80])  # int 0x80 (32-bit syscall)
        ],
        "reboot": [
            bytes([0xb0, 0x58]),  # mov al, 88 (0x58) - reboot syscall number for 32-bit
            bytes([0x31, 0xc0, 0xb0, 0x58]),  # xor eax, eax; mov al, 88
            bytes([0x6a, 0x58, 0x58]),  # push 88; pop eax
            bytes([0xb8, 0x58, 0x00, 0x00, 0x00]),  # mov eax, 88
        ],
        "reboot_magic": [
            # Magic values for reboot flags
            bytes([0xfe, 0xdc, 0x0d, 0xef]),  # LINUX_REBOOT_MAGIC1
            bytes([0x28, 0x12, 0x34, 0x56]),  # LINUX_REBOOT_MAGIC2
            bytes([0x4c, 0x4e, 0x58, 0x20]),  # "LNX " - Sometimes used as magic
        ],
        "command_values": [
            bytes([0x01, 0x23, 0x45, 0x67]),  # LINUX_REBOOT_CMD_RESTART
            bytes([0x4f, 0x52, 0x44, 0x52]),  # LINUX_REBOOT_CMD_POWER_OFF - "POFF"
            bytes([0xcd, 0x00, 0x00, 0x00]),  # LINUX_REBOOT_CMD_HALT
            bytes([0xa1, 0xb2, 0xc3, 0xd4]),  # LINUX_REBOOT_CMD_RESTART2
            bytes([0x00, 0x00, 0x00, 0x00]),  # Zero - sometimes used
        ],
        # Shutdown-specific patterns
        "shutdown": [
            # Shutdown via system utility
            bytes([0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e]),
            # /sbin/shutdown
            bytes([0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6f, 0x66, 0x66]),
            # /sbin/poweroff
            bytes([0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x68, 0x61, 0x6c, 0x74]),  # /sbin/halt
            bytes([0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x30]),  # /sbin/init 0
            bytes([0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x36]),  # /sbin/init 6

            # Shutdown args
            bytes([0x2d, 0x68, 0x20, 0x6e, 0x6f, 0x77]),  # -h now
            bytes([0x2d, 0x72, 0x20, 0x6e, 0x6f, 0x77]),  # -r now
            bytes([0x2d, 0x50, 0x20, 0x6e, 0x6f, 0x77]),  # -P now

            # Syscall for exit shutdown (exit group)
            bytes([0xb0, 0xe7]),  # mov al, 0xe7 (exit_group syscall)
            bytes([0x31, 0xc0, 0xb0, 0xe7]),  # xor eax, eax; mov al, 0xe7
        ],
        "specific": [
            # Common reboot patterns
            bytes([0x31, 0xc0, 0xb0, 0x58, 0x31, 0xdb, 0xb3, 0xad,
                   0xbb, 0xfe, 0xdc, 0x0d, 0xef, 0x31, 0xc9, 0xb1,
                   0x28, 0xba, 0x12, 0x34, 0x56, 0x00, 0xcd, 0x80]),  # example 32-bit reboot shellcode
            bytes([0x31, 0xc0, 0x50, 0xb0, 0x58, 0xbb, 0xfe, 0xdc,
                   0x0d, 0xef, 0x31, 0xc9, 0xb9, 0x01, 0x23, 0x45,
                   0x67, 0x31, 0xd2, 0xb2, 0x28, 0x89, 0xd3, 0xc1,
                   0xe3, 0x10, 0x09, 0xca, 0xcd, 0x80]),  # another 32-bit variant

            # Shutdown through system() call patterns
            bytes([0x31, 0xc0, 0x50, 0x68, 0x77, 0x6e, 0x20, 0x2d,
                   0x68, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x68,
                   0x6e, 0x2f, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f,
                   0x68, 0x2f, 0x73, 0x62, 0x69, 0x89, 0xe3, 0x50,
                   0x53, 0x89, 0xe1, 0xb0, 0x0b, 0xcd, 0x80]),  # Execve /sbin/shutdown

            bytes([0x31, 0xc0, 0x50, 0x68, 0x20, 0x6e, 0x6f, 0x77,
                   0x68, 0x66, 0x20, 0x2d, 0x68, 0x68, 0x65, 0x72, 0x6f,
                   0x68, 0x2f, 0x70, 0x6f, 0x77, 0x68, 0x69, 0x6e, 0x2f,
                   0x68, 0x2f, 0x73, 0x62, 0x89, 0xe3, 0x50, 0x53,
                   0x89, 0xe1, 0xb0, 0x0b, 0xcd, 0x80])  # Execve /sbin/poweroff
        ]
    },
    "64bit": {
        "syscall": [
            bytes([0x0f, 0x05])  # syscall instruction
        ],
        "reboot": [
            bytes([0xb0, 0xa9]),  # mov al, 169 (0xa9) - reboot syscall number for 64-bit
            bytes([0x6a, 0xa9, 0x58]),  # push 169; pop rax
            bytes([0xb8, 0xa9, 0x00, 0x00, 0x00]),  # mov eax, 169
            bytes([0x48, 0xc7, 0xc0, 0xa9, 0x00, 0x00, 0x00]),  # mov rax, 169
        ],
        "reboot_magic": [
            # 64-bit ways to load LINUX_REBOOT_MAGIC1 (0xfee1dead)
            bytes([0x48, 0xbf, 0xad, 0xde, 0xe1, 0xfe, 0x00, 0x00, 0x00, 0x00]),  # mov rdi, 0xfee1dead
            bytes([0xbf, 0xad, 0xde, 0xe1, 0xfe]),  # mov edi, 0xfee1dead
            bytes([0x48, 0xc7, 0xc7, 0xad, 0xde, 0xe1, 0xfe]),  # mov rdi, 0xfee1dead

            # LINUX_REBOOT_MAGIC2 (0x28121969)
            bytes([0x48, 0xbe, 0x69, 0x19, 0x12, 0x28, 0x00, 0x00, 0x00, 0x00]),  # mov rsi, 0x28121969
            bytes([0xbe, 0x69, 0x19, 0x12, 0x28]),  # mov esi, 0x28121969
            bytes([0x48, 0xc7, 0xc6, 0x69, 0x19, 0x12, 0x28]),  # mov rsi, 0x28121969
        ],
        "command_values": [
            # Command values loaded into registers
            bytes([0x48, 0xba, 0x67, 0x45, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00]),  # mov rdx, LINUX_REBOOT_CMD_RESTART
            bytes([0xba, 0x67, 0x45, 0x23, 0x01]),  # mov edx, LINUX_REBOOT_CMD_RESTART
            bytes([0x48, 0xc7, 0xc2, 0x67, 0x45, 0x23, 0x01]),  # mov rdx, LINUX_REBOOT_CMD_RESTART

            bytes([0x48, 0xba, 0x52, 0x44, 0x52, 0x4f, 0x00, 0x00, 0x00, 0x00]),  # mov rdx, LINUX_REBOOT_CMD_POWER_OFF
            bytes([0xba, 0x52, 0x44, 0x52, 0x4f]),  # mov edx, LINUX_REBOOT_CMD_POWER_OFF

            bytes([0x48, 0xc7, 0xc2, 0x00, 0x00, 0x00, 0x00]),  # mov rdx, 0 (sometimes used)
            bytes([0x31, 0xd2]),  # xor edx, edx (zero - sometimes used)
        ],
        "shutdown": [
            # Shutdown via system utility strings - 64-bit versions
            bytes([0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e]),
            # /sbin/shutdown
            bytes([0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6f, 0x66, 0x66]),
            # /sbin/poweroff
            bytes([0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x68, 0x61, 0x6c, 0x74]),  # /sbin/halt
            bytes([0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x30]),  # /sbin/init 0
            bytes([0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x36]),  # /sbin/init 6

            # Syscall for exit shutdown (exit group)
            bytes([0xb0, 0x3c]),  # mov al, 60 (exit syscall)
            bytes([0xb0, 0xe7]),  # mov al, 231 (exit_group syscall)
            bytes([0x48, 0xc7, 0xc0, 0xe7, 0x00, 0x00, 0x00]),  # mov rax, 231 (exit_group)
            bytes([0x48, 0xc7, 0xc0, 0x3c, 0x00, 0x00, 0x00]),  # mov rax, 60 (exit)

            # syscall 62 (kill)
            bytes([0xb0, 0x3e]),  # mov al, 62 (kill syscall)
            bytes([0x48, 0xc7, 0xc0, 0x3e, 0x00, 0x00, 0x00]),  # mov rax, 62 (kill)

            # kill -9 -1 (kill all processes, effective shutdown)
            bytes([0x48, 0xc7, 0xc7, 0xff, 0xff, 0xff, 0xff]),  # mov rdi, -1
            bytes([0xbe, 0x09, 0x00, 0x00, 0x00]),  # mov esi, 9 (SIGKILL)

            # Poweroff strings loaded into registers
            bytes([0x48, 0xb8, 0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x70, 0x6f]),  # mov rax, "/sbin/po"
            bytes([0x48, 0xb8, 0x77, 0x65, 0x72, 0x6f, 0x66, 0x66, 0x00, 0x00]),  # mov rax, "weroff\0\0"
        ],
        "stack_arg": [
            bytes([0x31, 0xc0, 0x50]),  # xor eax, eax; push rax (NULL terminator)
            bytes([0x48, 0x31, 0xd2]),  # xor rdx, rdx (zero third arg)
            bytes([0x48, 0x31, 0xf6]),  # xor rsi, rsi (zero second arg)
            bytes([0x48, 0x31, 0xff]),  # xor rdi, rdi (zero first arg)
            bytes([0x48, 0x99]),  # cqo (clear rdx by sign extending rax)
        ],
        "execve_setup": [
            # execve setup for shutdown commands
            bytes([0x6a, 0x3b, 0x58]),  # push 59; pop rax (execve syscall)
            bytes([0xb0, 0x3b]),  # mov al, 59 (execve syscall)
            bytes([0x48, 0x31, 0xd2]),  # xor rdx, rdx (null envp)
            bytes([0x52]),  # push rdx (null terminator)
        ],
        "specific": [
            # 64-bit reboot shellcode patterns
            bytes([0x48, 0x31, 0xc0, 0x48, 0xc7, 0xc0, 0xa9, 0x00, 0x00, 0x00, 0x48, 0xc7, 0xc7, 0xad,
                   0xde, 0xe1, 0xfe, 0x48, 0xc7, 0xc6, 0x69, 0x19, 0x12, 0x28, 0x48, 0xc7, 0xc2, 0x01,
                   0x00, 0x00, 0x00, 0x0f, 0x05]),  # Complete 64-bit reboot shellcode

            bytes([0x6a, 0xa9, 0x58, 0x48, 0xbf, 0xad, 0xde, 0xe1, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x48,
                   0xbe, 0x69, 0x19, 0x12, 0x28, 0x00, 0x00, 0x00, 0x00, 0x6a, 0x01, 0x5a, 0x0f, 0x05]),
            # Alternative 64-bit pattern

            # Optimized version
            bytes([0x31, 0xc0, 0xb0, 0xa9, 0xbf, 0xad, 0xde, 0xe1, 0xfe, 0xbe, 0x69, 0x19, 0x12, 0x28,
                   0xba, 0x67, 0x45, 0x23, 0x01, 0x0f, 0x05]),  # Compact 64-bit reboot

            # Power-off variant
            bytes([0x48, 0xc7, 0xc0, 0xa9, 0x00, 0x00, 0x00, 0x48, 0xc7, 0xc7, 0xad, 0xde, 0xe1, 0xfe,
                   0x48, 0xc7, 0xc6, 0x69, 0x19, 0x12, 0x28, 0x48, 0xb8, 0x4f, 0x46, 0x46, 0x50, 0x00,
                   0x00, 0x00, 0x00, 0x48, 0x89, 0xc2, 0x0f, 0x05]),  # Power-off shellcode

            # Shutdown through execve patterns
            bytes([0x48, 0x31, 0xd2, 0x52, 0x48, 0xb8, 0x77, 0x6e, 0x20, 0x2d, 0x68, 0x20, 0x6e, 0x6f,
                   0x50, 0x48, 0xb8, 0x2f, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x50, 0x48, 0xb8,
                   0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x2f, 0x50, 0x48, 0x89, 0xe7, 0x52, 0x57,
                   0x48, 0x89, 0xe6, 0x6a, 0x3b, 0x58, 0x0f, 0x05]),  # Execve /sbin/shutdown -h now

            bytes([0x48, 0x31, 0xd2, 0x52, 0x48, 0xb8, 0x66, 0x66, 0x20, 0x2d, 0x68, 0x20, 0x6e, 0x6f,
                   0x50, 0x48, 0xb8, 0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6f, 0x66, 0x50, 0x48, 0xb8,
                   0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x2f, 0x50, 0x48, 0x89, 0xe7, 0x52, 0x57,
                   0x48, 0x89, 0xe6, 0x6a, 0x3b, 0x58, 0x0f, 0x05]),  # Execve /sbin/poweroff -h now

            # Kill-based shutdown
            bytes([0x6a, 0x3e, 0x58, 0x48, 0xc7, 0xc7, 0xff, 0xff, 0xff, 0xff, 0x6a, 0x09, 0x5e, 0x0f, 0x05])
            # kill -9 -1
        ]
    }
}


pattern_combinations = {
    "32bit": [
        # Reboot patterns
        ["syscall", "reboot", "reboot_magic"],  # Combination of syscall, reboot syscall number, and magic values
        ["reboot", "reboot_magic", "command_values"],  # Reboot syscall with magic values and command
        ["syscall", "reboot", "command_values"],  # Syscall with reboot number and command value

        # Shutdown patterns
        ["syscall", "shutdown"],  # Syscall with shutdown string
        ["shutdown", "syscall"]  # Shutdown string with syscall
    ],
    "64bit": [
        # Reboot patterns
        ["syscall", "reboot", "reboot_magic"],  # Combination of syscall, reboot syscall number, and magic values
        ["syscall", "reboot", "reboot_magic", "command_values"],  # Complete sequence with all components
        ["reboot", "reboot_magic", "command_values"],  # Main components without explicit syscall instruction
        ["syscall", "reboot", "command_values"],  # Syscall with reboot number and command value

        # Shutdown patterns
        ["syscall", "shutdown"],  # Syscall with shutdown string
        ["execve_setup", "shutdown"],  # Execve setup with shutdown string
        ["shutdown", "execve_setup"],  # Shutdown string with execve setup
        ["syscall", "shutdown", "stack_arg"]  # Shutdown with syscall and stack argument setup
    ]
}