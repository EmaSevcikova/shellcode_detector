import subprocess

# Path to the binary to debug (modify this)
binary_path = "../vuln"

# Define GDB commands
# run $(python3 -c 'print("A"*112)')
gdb_commands = f"""
file {binary_path}
set disassemble-next-line on
break func
run $(python3 payload.py)
print $ebp
print $ebp - 0x6c
print $ebp - 0x6c + 0x14
n
x/50wx $esp
c
c
exit
"""

# while 1
#     si
# end

# gdb_commands = f"""
# file {binary_path}
# set disassemble-next-line on
# break func
# run $(python3 -c 'print("A"*100)')
# n
# x/50wx $esp
# n
# n
# n
# n
# n
# c
# c
# exit
# """
# run $(python3 payload.py)
# 0x80491e4
# Launch GDB with subprocess
process = subprocess.Popen(
    ["gdb", "-q"],
    stdin=subprocess.PIPE,
    stdout=subprocess.PIPE,
    stderr=subprocess.PIPE,
    text=True
)

# Send GDB commands
stdout, stderr = process.communicate(gdb_commands)

# Print output
print(stdout)
print(stderr)
